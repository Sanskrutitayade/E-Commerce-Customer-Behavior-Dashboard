# -*- coding: utf-8 -*-
"""E-COMMERCE DATA ANALYSIS

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v2Ih7q00G77NV7TM7oyiOhweg6fsK383
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df1 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/E-commerce/TABLE 1.csv')
print(df1.head())
df2 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/E-commerce/TABLE 2.csv')
print(df2.head())
df3 = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/E-commerce/TABLE 3.csv')
print(df3.head())

"""DELETING ALL UNNECESSARY ROW
1. DELETING URL ROWS
2. DELETING BLANK ROWS
"""

###for tbale1
print(df1.dtypes)
df1.drop(['imageURLs','sourceURLs','prices.sourceURLs'],axis=1,inplace=True)
print()
df1.drop(['prices.returnPolicy','prices.merchant','prices.dateAdded'],axis=1,inplace=True)
print(df1.dtypes)
df1.info()
df1.drop(['descriptions','features','flavors','isbn','keys','merchants','prices.source','prices.warranty','quantities','reviews','skus','websiteIDs'],axis=1,inplace=True)
print(df1.dtypes)

df1.head()

###for table 2

df2.drop(['imageURLs', 'sourceURLs', 'prices.sourceURLs', 'prices.returnPolicy', 'prices.merchant', 'prices.dateAdded','imageURLs', 'sourceURLs', 'prices.sourceURLs', 'prices.returnPolicy', 'prices.merchant', 'prices.dateAdded'], axis=1, inplace=True)
print()
print(df2.dtypes)

df1.head()

###for table 3

df3.drop(['imageURLs', 'sourceURLs', 'prices.sourceURLs', 'prices.returnPolicy', 'prices.merchant', 'prices.dateAdded'], axis=1, inplace=True)
print()
print(df3.dtypes)

print(df1.shape,
df2.shape,
df3.shape)

print(df3.dtypes)
print()
print(df2.dtypes)
print()
print(df1.dtypes)

"""**COMBINEING ALL 3 TABLES TO ONE**"""

final = pd.concat([df1, df2, df3], ignore_index=True)
print(final.shape)
print()
print(final.dtypes)
print(final.head(5))

"""EXPANDING COLUMNS

1.categories
2. colors
"""

###categories
split_categories = final['categories'].str.split(',', expand=True)
final['type'] = split_categories[0]
final['type of wear'] = split_categories[1]
final['category'] = split_categories[2]
final

final.drop('categories',axis=1,inplace = True)
final
###colors

max_columns = 15
split_categories = final['colors'].str.split(',', expand=True)

for i in range(max_columns):
    final[f'color{i + 1}'] = split_categories[i]

final.drop('colors',axis=1,inplace=True)
#print(final)

final.info()

###size
max_columns = 23
lol = final['sizes'].str.split(',',expand=True)
for i in range(max_columns):
 final[f'size{i+1}'] = lol[i]
final.drop('sizes',axis=1,inplace=True)


###dropping error columns added when merged
final.drop(['prices.count','count','prices.flavor'],axis=1,inplace=True)
#print(final)

final.info()

###renamimg columns for better understanding
final.rename(columns={'ean': 'European Article Number'}, inplace=True)
final.info()

final.rename(columns={'ean / upc': 'International Article Number'}, inplace=True)
final.info()

final.rename(columns={'asins': 'amazon Standard Identification Number'}, inplace=True)

final.rename(columns={'upc': 'Universal Product Code'}, inplace=True)


###adding column to count total number of colors avaliable for each product
color_columns = [f"color{i}" for i in range(1, 16)]
def count_colors(row):
     return sum(1 for color_column in color_columns if row[color_column])
final['total_colors'] = final.apply(count_colors, axis=1)
#print(final)
final.info()

###adding column to count total number of size avaliable for each product
lol = [f"size{i}" for i in range(1, 23)]
def count_colors(row):
     return sum(1 for color_column in color_columns if row[color_column])
final['total_size'] = final.apply(count_colors, axis=1)
final.info()


final.to_excel('output.xlsx', index=False)
print(final)

selected_rows = final.loc[final['id'] == 'AVpfMWqiLJeJML434XP1', ['id', 'prices.size']]
print(selected_rows)